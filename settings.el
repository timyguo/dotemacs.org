(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(backup-directory-alist (quote (("." . "~/.emacs.d/backups"))))
 '(bbdb-default-country "")
 '(bbdb-file "~/Documents/bbdb")
 '(bbdb-message-caching-enabled nil)
 '(bbdb-no-duplicates t)
 '(bbdb-offer-save (quote savenoprompt))
 '(bbdb-silent-running t)
 '(bbdb-use-pop-up nil)
 '(bbdb-vcard-import-translation-table (quote (("CELL\\|CAR" . "Mobile") ("WORK" . "Work") ("HOME" . "Home") ("^$" . "Work"))))
 '(bbdb/mail-auto-create-p nil)
 '(blink-cursor-mode nil)
 '(custom-theme-load-path (quote (custom-theme-directory t "/Users/tonyday/.emacs.d/elpa/zenburn-theme-1.5")))
 '(delete-selection-mode t)
 '(gnus-activate-level 1)
 '(gnus-after-getting-new-news-hook (quote (gnus-display-time-event-handler gnus-group-save-newsrc)))
 '(gnus-agent-expire-all nil)
 '(gnus-agent-expire-days 14)
 '(gnus-agent-go-online t)
 '(gnus-agent-mark-unread-after-downloaded nil)
 '(gnus-agent-synchronize-flags t)
 '(gnus-always-read-dribble-file t)
 '(gnus-article-address-banner-alist (quote (("@sig\\.com\\'" . signature) ("@volcanocorp\\.com\\'" . signature))))
 '(gnus-article-sort-functions (quote ((not gnus-article-sort-by-number))))
 '(gnus-article-update-date-headers nil)
 '(gnus-asynchronous t)
 '(gnus-auto-select-next nil nil nil "
VERY IMPORTANT SETTING ***.  See http://debbugs.gnu.org/cgi/bugreport.cgi?bug=9399")
 '(gnus-buttonized-mime-types (quote ("multipart/alternative")))
 '(gnus-check-new-newsgroups nil)
 '(gnus-cited-closed-text-button-line-format "...<schnipp %n>...
")
 '(gnus-cited-lines-visible (quote (5 . 10)))
 '(gnus-cited-opened-text-button-line-format "")
 '(gnus-completing-read-function (quote gnus-ido-completing-read))
 '(gnus-default-article-saver (quote gnus-summary-write-to-file))
 '(gnus-default-directory "~")
 '(gnus-duplicate-list-length 100000)
 '(gnus-extra-headers (quote (To Cc Content-Type)))
 '(gnus-gcc-mark-as-read t)
 '(gnus-generate-tree-function (quote gnus-generate-horizontal-tree))
 '(gnus-group-default-list-level 4)
 '(gnus-group-line-format "%S%p%P%5y%5T: %(%B%G%B%)
")
 '(gnus-group-mode-hook (quote (gnus-topic-mode gnus-agent-mode)))
 '(gnus-group-use-permanent-levels t)
 '(gnus-ignored-from-addresses "^zygomega\\|tonyday567\\|tony.day")
 '(gnus-ignored-mime-types (quote ("application/x-pkcs7-signature" "application/ms-tnef" "text/x-vcard")))
 '(gnus-interactive-exit (quote quiet))
 '(gnus-large-newsgroup 1000)
 '(gnus-message-archive-group (quote ((format-time-string "sent.%Y-%m"))))
 '(gnus-message-replyencrypt nil)
 '(gnus-novice-user nil)
 '(gnus-parameters (quote (("^INBOX" (expiry-wait . immediate) (expiry-target . delete) (display . [or (not reply) (not expire)])))))
 '(gnus-read-active-file nil)
 '(gnus-read-newsrc-file nil)
 '(gnus-refer-article-method (quote (current (nnregistry) (nntp "Gmane" (nntp-address "news.gmane.org")) (nntp "GigaNews" (nntp-address "text.giganews.com") (nntp-authinfo-user "tonyday567")))) nil nil "***** NOTE: NEED TO RESTORE (nnregistry) here")
 '(gnus-refer-thread-use-nnir t)
 '(gnus-safe-html-newsgroups ".")
 '(gnus-save-duplicate-list t)
 '(gnus-save-killed-list nil)
 '(gnus-save-newsrc-file nil)
 '(gnus-score-default-duration (quote p))
 '(gnus-score-expiry-days 30)
 '(gnus-score-find-score-files-function (quote (gnus-score-find-hierarchical)))
 '(gnus-select-group-hook (quote (gnus-group-set-timestamp)))
 '(gnus-signature-separator (quote ("^-- $" "^-- *$" "^_____+$" "^-----+
?
NOTICE: ")))
 '(gnus-simplify-subject-functions (quote (gnus-simplify-subject-fuzzy)))
 '(gnus-sort-gathered-threads-function (quote gnus-thread-sort-by-date) t)
 '(gnus-spam-process-destinations (quote (("^\\(\\(nnimap\\+\\)?Mail:\\)?[^+]*$" "[Gmail].Spam"))))
 '(gnus-spam-process-newsgroups (quote (("^\\(\\(nntp\\+\\)?LocalNNTP:\\)?gmane\\." ((spam spam-use-gmane))))))
 '(gnus-split-methods (quote ((gnus-save-site-lisp-file) (gnus-article-archive-name) (gnus-article-nndoc-name))))
 '(gnus-started-hook (quote ((lambda nil (run-hooks (quote gnus-after-getting-new-news-hook))))))
 '(gnus-subscribe-newsgroup-method (quote gnus-subscribe-topics))
 '(gnus-summary-expunge-below -100)
 '(gnus-summary-highlight (quote (((eq mark gnus-spam-mark) . spam) ((eq mark gnus-spam-mark) . spam) ((eq mark gnus-expirable-mark) . gnus-summary-expirable-face) ((eq mark gnus-spam-mark) . spam) ((eq mark gnus-spam-mark) . spam) ((eq mark gnus-canceled-mark) . gnus-summary-cancelled) ((and uncached (> score default-high)) . gnus-summary-high-undownloaded) ((and uncached (< score default-low)) . gnus-summary-low-undownloaded) (uncached . gnus-summary-normal-undownloaded) ((and (> score default-high) (or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark))) . gnus-summary-high-ticked) ((and (< score default-low) (or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark))) . gnus-summary-low-ticked) ((or (eq mark gnus-dormant-mark) (eq mark gnus-ticked-mark)) . gnus-summary-normal-ticked) ((and (> score default-high) (eq mark gnus-ancient-mark)) . gnus-summary-high-ancient) ((and (< score default-low) (eq mark gnus-ancient-mark)) . gnus-summary-low-ancient) ((eq mark gnus-ancient-mark) . gnus-summary-normal-ancient) ((and (> score default-high) (eq mark gnus-unread-mark)) . gnus-summary-high-unread) ((and (< score default-low) (eq mark gnus-unread-mark)) . gnus-summary-low-unread) ((eq mark gnus-unread-mark) . gnus-summary-normal-unread) ((> score default-high) . gnus-summary-high-read) ((< score default-low) . gnus-summary-low-read) (t . gnus-summary-normal-read))))
 '(gnus-summary-line-format "%O%U%R%z%~(form my-align-gnus-summary)@%B%&user-date;: %(%f%~(form my-align-gnus-subject)@%)               %s
")
 '(gnus-suppress-duplicates t)
 '(gnus-suspend-gnus-hook (quote (gnus-group-save-newsrc)))
 '(gnus-thread-hide-subtree (quote (not gnus-article-unread-p)))
 '(gnus-thread-sort-functions (quote ((not gnus-thread-sort-by-number) (not gnus-thread-sort-by-most-recent-date) gnus-thread-sort-by-total-score)))
 '(gnus-topic-display-empty-topics nil)
 '(gnus-topic-line-format "%i[ %A: %(%{%n%}%) ]%v
")
 '(gnus-treat-date-lapsed (quote head))
 '(gnus-treat-display-smileys nil)
 '(gnus-treat-from-gravatar (quote head))
 '(gnus-treat-hide-citation t)
 '(gnus-treat-mail-gravatar (quote head))
 '(gnus-treat-strip-cr t)
 '(gnus-treat-strip-leading-blank-lines (quote first))
 '(gnus-treat-strip-multiple-blank-lines t)
 '(gnus-treat-strip-trailing-blank-lines (quote last))
 '(gnus-tree-minimize-window nil)
 '(gnus-uncacheable-groups "^nnml")
 '(gnus-use-cache t)
 '(gnus-use-trees t)
 '(gnus-valid-select-methods (quote (("nntp" post address prompt-address physical-address) ("nnspool" post address) ("nnvirtual" post-mail prompt-address virtual) ("nnmbox" mail address respool) ("nnml" post-mail address respool) ("nnmh" mail address respool) ("nndir" post-mail prompt-address physical-address) ("nneething" none address prompt-address physical-address) ("nndoc" none address prompt-address virtual) ("nnbabyl" mail address respool) ("nndraft" post-mail) ("nnfolder" mail address respool) ("nngateway" post-mail address prompt-address physical-address) ("nnweb" none) ("nnrss" none) ("nnagent" post-mail) ("nnimap" post-mail address prompt-address physical-address respool server-marks) ("nnmaildir" mail address respool server-marks) ("nnnil" none) ("nndiary" post-mail respool address) ("nnir" mail virtual))))
 '(gnus-verbose 4)
 '(ido-file-extensions-order (quote (".org")))
 '(indent-tabs-mode t)
 '(initial-scratch-message "")
 '(mail-dont-reply-to-names "dave@\\(boost-consulting\\|boostpro\\)\\.com\\|dave\\.abrahams@rcn\\.com\\|boost\\.consulting@gmail\\.com\\|dave\\.boostpro@gmail\\.com\\|Undisclosed-recipients[:;]*")
 '(mail-envelope-from (quote header))
 '(mail-setup-with-from nil)
 '(mail-signature t)
 '(mail-source-delete-incoming t)
 '(mail-source-delete-old-incoming-confirm nil)
 '(mail-source-report-new-mail-interval 15)
 '(mail-specify-envelope-from t)
 '(mail-user-agent (quote gnus-user-agent))
 '(nnir-hyrex-remove-prefix "~/Library/Data/Gnus/Mail")
 '(nnir-ignored-newsgroups "^\"\\([^[]\\|\\[Gmail][/.][^A]\\)")
 '(nnir-imap-default-search-key "imap")
 '(nnir-namazu-index-directory "~/Library/Data/Gnus/Mail/namazu")
 '(nnir-namazu-remove-prefix "~/Library/Data/Gnus/Mail")
 '(nnir-notmuch-remove-prefix "~/Library/Data/Gnus/Mail")
 '(nnir-swish++-configuration-file "~/Library/Data/Gnus/Mail/swish++.conf")
 '(nnir-swish++-remove-prefix "~/Library/Data/Gnus/Mail/")
 '(nnir-swish-e-index-file "~/Library/Data/Gnus/Mail/index.swish-e")
 '(nnir-swish-e-index-files (quote ("~/Library/Data/Gnus/Mail/index.swish-e")))
 '(nnir-swish-e-remove-prefix "~/Library/Data/Gnus/Mail/")
 '(nnmail-crosspost nil)
 '(nnmail-expiry-wait 30)
 '(nnmail-extra-headers (quote (To Cc Content-Type)))
 '(nnmail-scan-directory-mail-source-once t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-babel-evaluate nil)
 '(org-list-indent-offset 2)
 '(org-support-shift-select t)
 '(org-tag-alist (quote (("urgent" . 117) ("bill" . 98) ("scarce" . 115) ("crypt" . 99) ("emacs" . 101))))
 '(org-todo-keyword-faces (quote (("TODO" :foreground "#6775ac" :weight bold) ("NEXT" :foreground "#bc8878" :weight bold) ("DONE" :foreground "forest green" :weight bold) ("WAITING" :foreground "orange" :weight bold) ("HOLD" :foreground "magenta" :weight bold) ("CANCELLED" :foreground "forest green" :weight bold) ("PHONE" :foreground "forest green" :weight bold))))
 '(reb-re-syntax (quote string))
 '(save-place-file "/Users/tonyday/.emacs.d/places")
 '(sentence-end-double-space nil)
 '(shift-select-mode t)
 '(tool-bar-mode nil)
 '(transient-mark-mode t)
 '(truncate-partial-width-windows nil)
 '(uniquify-buffer-name-style (quote forward) nil (uniquify))
 '(user-full-name "Tony Day")
 '(user-mail-address "tonyday567@gmail.com")
 '(visible-bell t))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(diff-added ((((background dark)) (:foreground "#FFFF9B9BFFFF")) (t (:foreground "DarkGreen"))))
 '(diff-changed ((((background dark)) (:foreground "Yellow")) (t (:foreground "MediumBlue"))))
 '(diff-context ((((background dark)) (:foreground "White")) (t (:foreground "Black"))))
 '(diff-file-header ((((background dark)) (:foreground "Cyan" :background "Black")) (t (:foreground "Red" :background "White"))))
 '(diff-header ((((background dark)) (:foreground "Cyan")) (t (:foreground "Red"))))
 '(diff-index ((((background dark)) (:foreground "Magenta")) (t (:foreground "Green"))))
 '(diff-nonexistent ((((background dark)) (:foreground "#FFFFFFFF7474")) (t (:foreground "DarkBlue"))))
 '(gnus-summary-expirable-face ((t (:foreground "grey55" :strike-through t :slant italic :weight normal :width condensed :family "DejaVu Sans"))))
 '(message-cited-text ((((class color)) (:foreground "Blue"))))
 '(message-header-cc ((((class color)) (:bold t :foreground "green2"))))
 '(message-header-name ((((class color)) (:bold nil :foreground "Blue"))))
 '(message-header-other ((((class color)) (:foreground "Firebrick"))))
 '(message-header-subject ((((class color)) (:foreground "black"))))
 '(message-header-xheader ((((class color)) (:foreground "Blue"))))
 '(message-mml ((((class color)) (:foreground "DarkGreen"))))
 '(message-separator ((((class color)) (:foreground "Tan"))))
 '(org-column ((t (:background "#505050" :strike-through nil :underline nil :slant normal :weight normal :height 120 :family "Monaco"))))
 '(org-mode-line-clock ((t (:foreground "red" :box (:line-width -1 :style released-button)))) t)
 '(org-mode-line-clock-overrun ((t (:inherit modeline :foreground "#5650d5" :background "#dccce9"))) t)
 '(trailing-whitespace ((t (:background "disabledControlTextColor"))))
 '(whitespace-indentation ((t (:background "#3f3f3f" :foreground "#cc9393")))))
